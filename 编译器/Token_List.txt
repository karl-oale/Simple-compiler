	int		 <KT,1>
	max		 <IT,0>
	(		 <PT,13>
	int		 <KT,1>
	pl		 <IT,1>
	,		 <PT,12>
	int		 <KT,1>
	de		 <IT,2>
	)		 <PT,14>
	{		 <PT,17>
	pl		 <IT,1>
	=		 <PT,8>
	1		 <IC,0>
	;		 <PT,11>
	de		 <IT,2>
	=		 <PT,8>
	2		 <IC,1>
	;		 <PT,11>
	int		 <KT,1>
	a		 <IT,3>
	,		 <PT,12>
	b		 <IT,4>
	,		 <PT,12>
	c		 <IT,5>
	;		 <PT,11>
	if		 <KT,4>
	(		 <PT,13>
	a		 <IT,3>
	<		 <PT,4>
	b		 <IT,4>
	)		 <PT,14>
	{		 <PT,17>
	a		 <IT,3>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	1		 <IC,0>
	;		 <PT,11>
	}		 <PT,18>
	else		 <KT,5>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	;		 <PT,11>
	}		 <PT,18>
	while		 <KT,6>
	(		 <PT,13>
	a		 <IT,3>
	>		 <PT,5>
	b		 <IT,4>
	)		 <PT,14>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	*		 <PT,2>
	(		 <PT,13>
	a		 <IT,3>
	+		 <PT,0>
	1		 <IC,0>
	)		 <PT,14>
	;		 <PT,11>
	}		 <PT,18>
	return		 <KT,8>
	c		 <IT,5>
	;		 <PT,11>
	}		 <PT,18>
	int		 <KT,1>
	min		 <IT,6>
	(		 <PT,13>
	int		 <KT,1>
	t		 <IT,7>
	,		 <PT,12>
	int		 <KT,1>
	r		 <IT,8>
	)		 <PT,14>
	{		 <PT,17>
	t		 <IT,7>
	=		 <PT,8>
	2		 <IC,1>
	;		 <PT,11>
	r		 <IT,8>
	=		 <PT,8>
	2		 <IC,1>
	*		 <PT,2>
	69		 <IC,2>
	+		 <PT,0>
	36		 <IC,3>
	/		 <PT,3>
	t		 <IT,7>
	;		 <PT,11>
	t		 <IT,7>
	=		 <PT,8>
	max		 <IT,0>
	(		 <PT,13>
	t		 <IT,7>
	,		 <PT,12>
	r		 <IT,8>
	)		 <PT,14>
	;		 <PT,11>
	return		 <KT,8>
	t		 <IT,7>
	;		 <PT,11>
	}		 <PT,18>
	int		 <KT,1>
	main		 <KT,0>
	(		 <PT,13>
	)		 <PT,14>
	{		 <PT,17>
	bool		 <KT,10>
	f		 <IT,9>
	;		 <PT,11>
	int		 <KT,1>
	a		 <IT,3>
	;		 <PT,11>
	int		 <KT,1>
	b		 <IT,4>
	,		 <PT,12>
	c		 <IT,5>
	;		 <PT,11>
	float		 <KT,3>
	kl		 <IT,10>
	;		 <PT,11>
	f		 <IT,9>
	=		 <PT,8>
	2		 <IC,1>
	<		 <PT,4>
	3		 <IC,4>
	;		 <PT,11>
	kl		 <IT,10>
	=		 <PT,8>
	2.236		 <FC,0>
	;		 <PT,11>
	string		 <KT,9>
	hu		 <IT,11>
	;		 <PT,11>
	hu		 <IT,11>
	=		 <PT,8>
	"ji"		 <ST,0>
	;		 <PT,11>
	char		 <KT,2>
	l		 <IT,12>
	;		 <PT,11>
	l		 <IT,12>
	=		 <PT,8>
	'k'		 <CT,0>
	;		 <PT,11>
	a		 <IT,3>
	=		 <PT,8>
	3		 <IC,4>
	*		 <PT,2>
	5		 <IC,5>
	;		 <PT,11>
	b		 <IT,4>
	=		 <PT,8>
	5		 <IC,5>
	*		 <PT,2>
	(		 <PT,13>
	1		 <IC,0>
	+		 <PT,0>
	1		 <IC,0>
	)		 <PT,14>
	;		 <PT,11>
	c		 <IT,5>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	;		 <PT,11>
	int		 <KT,1>
	m		 <IT,13>
	[		 <PT,15>
	5		 <IC,5>
	]		 <PT,16>
	=		 <PT,8>
	{		 <PT,17>
	1		 <IC,0>
	,		 <PT,12>
	2		 <IC,1>
	,		 <PT,12>
	3		 <IC,4>
	,		 <PT,12>
	4		 <IC,6>
	,		 <PT,12>
	5		 <IC,5>
	}		 <PT,18>
	;		 <PT,11>
	a		 <IT,3>
	=		 <PT,8>
	5		 <IC,5>
	;		 <PT,11>
	if		 <KT,4>
	(		 <PT,13>
	a		 <IT,3>
	<		 <PT,4>
	b		 <IT,4>
	)		 <PT,14>
	{		 <PT,17>
	a		 <IT,3>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	1		 <IC,0>
	;		 <PT,11>
	}		 <PT,18>
	else		 <KT,5>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	;		 <PT,11>
	}		 <PT,18>
	while		 <KT,6>
	(		 <PT,13>
	a		 <IT,3>
	>		 <PT,5>
	b		 <IT,4>
	)		 <PT,14>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	*		 <PT,2>
	(		 <PT,13>
	a		 <IT,3>
	+		 <PT,0>
	1		 <IC,0>
	)		 <PT,14>
	;		 <PT,11>
	}		 <PT,18>
	while		 <KT,6>
	(		 <PT,13>
	a		 <IT,3>
	>		 <PT,5>
	(		 <PT,13>
	2		 <IC,1>
	+		 <PT,0>
	3		 <IC,4>
	)		 <PT,14>
	*		 <PT,2>
	6		 <IC,7>
	-		 <PT,1>
	7		 <IC,8>
	)		 <PT,14>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	a		 <IT,3>
	+		 <PT,0>
	b		 <IT,4>
	*		 <PT,2>
	(		 <PT,13>
	a		 <IT,3>
	+		 <PT,0>
	1		 <IC,0>
	)		 <PT,14>
	+		 <PT,0>
	c		 <IT,5>
	-		 <PT,1>
	56		 <IC,9>
	;		 <PT,11>
	if		 <KT,4>
	(		 <PT,13>
	2		 <IC,1>
	)		 <PT,14>
	{		 <PT,17>
	b		 <IT,4>
	=		 <PT,8>
	2		 <IC,1>
	+		 <PT,0>
	8		 <IC,10>
	*		 <PT,2>
	9		 <IC,11>
	-		 <PT,1>
	(		 <PT,13>
	(		 <PT,13>
	5		 <IC,5>
	+		 <PT,0>
	6		 <IC,7>
	)		 <PT,14>
	*		 <PT,2>
	8		 <IC,10>
	)		 <PT,14>
	*		 <PT,2>
	9		 <IC,11>
	;		 <PT,11>
	}		 <PT,18>
	}		 <PT,18>
	max		 <IT,0>
	(		 <PT,13>
	c		 <IT,5>
	,		 <PT,12>
	b		 <IT,4>
	)		 <PT,14>
	;		 <PT,11>
	c		 <IT,5>
	=		 <PT,8>
	min		 <IT,6>
	(		 <PT,13>
	a		 <IT,3>
	,		 <PT,12>
	b		 <IT,4>
	)		 <PT,14>
	;		 <PT,11>
	return		 <KT,8>
	1		 <IC,0>
	;		 <PT,11>
	}		 <PT,18>
